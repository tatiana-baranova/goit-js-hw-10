{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\n\nconst btnStart = document.querySelector(\"[data-start]\");\nconst datePicker = document.querySelector(\"#datetime-picker\");\nlet userSelectedDate = null;\nlet timerId;\n\nconst options = {\nenableTime: true,\ntime_24hr: true,\ndefaultDate: new Date(),\nminuteIncrement: 1,\nonClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n    iziToast.warning({\n        title: 'Warning!',\n        message: 'Please choose a date in the future',\n    });\n    btnStart.disabled = true;\n    } else {\n    userSelectedDate = selectedDate;\n    btnStart.disabled = false;\n    }\n},\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nbtnStart.addEventListener(\"click\", function () {\nif (userSelectedDate) {\n    btnStart.disabled = true;\n    datePicker.disabled = true;\n    timerId = setInterval(() => {\n    const deltaTime = userSelectedDate - new Date();\n\n    \n    if (deltaTime <= 0) {\n        clearInterval(timerId);\n        updateTimer(0, 0, 0, 0);\n        iziToast.success({\n        title: \"Success!\",\n        message: \"Timer has finished!\",\n        });\n        datePicker.disabled = false;\n        return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(deltaTime);\n    updateTimer(days, hours, minutes, seconds);\n    }, 1000);\n}\n});\n\nfunction convertMs(ms) {\nconst second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\nconst days = Math.floor(ms / day);\nconst hours = Math.floor((ms % day) / hour);\nconst minutes = Math.floor(((ms % day) % hour) / minute);\nconst seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\nreturn { days, hours, minutes, seconds };\n}\n\nfunction updateTimer(days, hours, minutes, seconds) {\ndocument.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\ndocument.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\ndocument.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\ndocument.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\nreturn String(value).padStart(2, \"0\");\n}\n"],"names":["btnStart","datePicker","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","deltaTime","updateTimer","days","hours","minutes","seconds","convertMs","ms","addLeadingZero","value"],"mappings":"+IAQA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAa,SAAS,cAAc,kBAAkB,EAC5D,IAAIC,EAAmB,KACnBC,EAEJ,MAAMC,EAAU,CAChB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACxBC,EAAS,QAAQ,CACb,MAAO,WACP,QAAS,oCACjB,CAAK,EACDP,EAAS,SAAW,KAEpBE,EAAmBI,EACnBN,EAAS,SAAW,GAExB,CACA,EAEAQ,EAAU,mBAAoBJ,CAAO,EAErCJ,EAAS,iBAAiB,QAAS,UAAY,CAC3CE,IACAF,EAAS,SAAW,GACpBC,EAAW,SAAW,GACtBE,EAAU,YAAY,IAAM,CAC5B,MAAMM,EAAYP,EAAmB,IAAI,KAGzC,GAAIO,GAAa,EAAG,CAChB,cAAcN,CAAO,EACrBO,EAAY,EAAG,EAAG,EAAG,CAAC,EACtBH,EAAS,QAAQ,CACjB,MAAO,WACP,QAAS,qBACjB,CAAS,EACDN,EAAW,SAAW,GACtB,MACH,CAED,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAS,EAC7DC,EAAYC,EAAMC,EAAOC,EAASC,CAAO,CACxC,EAAE,GAAI,EAEX,CAAC,EAED,SAASC,EAAUC,EAAI,CAMvB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACtC,CAEA,SAASJ,EAAYC,EAAMC,EAAOC,EAASC,EAAS,CACpD,SAAS,cAAc,aAAa,EAAE,YAAcG,EAAeN,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcM,EAAeL,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcK,EAAeJ,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,CAC7E,CAEA,SAASG,EAAeC,EAAO,CAC/B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACpC"}